def answer(times, time_limit):
    if len(times) <= 2:
        return []

    return []

# ======================= Test Case ==========================================

if __name__ == '__main__':
    case1 = [[0, 1, 1, 1, 1],
             [1, 0, 1, 1, 1],
             [1, 1, 0, 1, 1],
             [1, 1, 1, 0, 1],
             [1, 1, 1, 1, 0]]
    print("\n\nCase 1: Provided test case 1.\nTime limit: 3")
    for row in case1:
        print('', row)
    print("\n  Expected: [0, 1]\nCalculated:", str(answer(case1, 3)))
    # route: start --> 0 --> 1 --> bulkhead
    # time:      3     2     1     0
    print("================================================================")
    # print("\n\nCase 2: Provided test case 2.\nTime limit: 1")
    # case2 = [[0, 2, 2, 2, -1],
    #          [9, 0, 2, 2, -1],
    #          [9, 3, 0, 2, -1],
    #          [9, 3, 2, 0, -1],
    #          [9, 3, 2, 2, 0]]
    # for row in case2:
    #     print('', row)
    # print("\n  Expected: [1, 2]\nCalculated:", str(answer(case2, 1)))
    # route: start --> bulkhead --> 1 --> bulkhead --> 2 --> bulkhead
    # time:      1            2     0            1    -1            0
    # print("================================================================")
    # print("\n\nCase 3: Infinite negative cycle.\nTime limit: 0")
    # case3 = [[0, 20, 20, 20, -1],
    #          [90, 0, 20, 20, 0],
    #          [90, 30, 0, 20, 0],
    #          [90, 30, 20, 0, 0],
    #          [-1, 30, 20, 20, 0]]
    # for row in case3:
    #     print('', row)
    # print("\n  Expected: [0, 1, 2]\nCalculated:", str(answer(case3, 0)))
    # print("================================================================")
    # print("\n\nCase 4: Max bunnies. None rescuable.\nTime limit: 1")
    # case4 = [[1, 1, 1, 1, 1, 1, 1],
    #          [1, 1, 1, 1, 1, 1, 1],
    #          [1, 1, 1, 1, 1, 1, 1],
    #          [1, 1, 1, 1, 1, 1, 1],
    #          [1, 1, 1, 1, 1, 1, 1],
    #          [1, 1, 1, 1, 1, 1, 1],
    #          [1, 1, 1, 1, 1, 1, 1]]
    # for row in case4:
    #     print('', row)
    # print("\n  Expected: []\nCalculated:", str(answer(case4, 1)))
    # print("================================================================")
    # print("\n\nCase 5: One bunny.\nTime limit: 2")
    # case5 = [[1, 1, 1],
    #          [1, 1, 1],
    #          [1, 1, 1]]
    # for row in case5:
    #     print('', row)
    # print("\n  Expected: [0]\nCalculated:", str(answer(case5, 2)))
    # print("================================================================")
    # print("\n\nCase 6: Multiple revisits.\nTime limit: 10")
    # case6 = [[0, 5, 11, 11, 1],
    #          [10, 0, 1, 5, 1],
    #          [10, 1, 0, 4, 0],
    #          [10, 1, 5, 0, 1],
    #          [10, 10, 10, 10, 0]]
    # for row in case6:
    #     print('', row)
    # print("\n  Expected: [0, 1]\nCalculated:", str(answer(case6, 10)))
    # print("================================================================")
    # print("\n\nCase 7: Multiple Revisits 2.\nTime limit: 5")
    # case7 = [[0, 10, 10, 10, 1],
    #          [0, 0, 10, 10, 10],
    #          [0, 10, 0, 10, 10],
    #          [0, 10, 10, 0, 10],
    #          [1, 1, 1, 1, 0]]
    # for row in case7:
    #     print('', row)
    # print("\n  Expected: [0, 1]\nCalculated:", str(answer(case7, 5)))
    # print("================================================================")
    # print("\n\nCase 8: Time travel.\nTime limit: 1")
    # case8 = [[0, 0, 0, 0, 0],
    #         [0, 0, 0, 0, 0],
    #         [0, 0, 0, 0, 0],
    #         [0, 0, 0, 0, 0],
    #         [0, 0, 0, 0, 0]]
    # for row in case8:
    #     print('', row)
    # print("\n  Expected: [0, 1, 2]\nCalculated:", str(answer(case8, 1)))
    # print("================================================================")
    # print("\n\nCase 9: No bunnies.\nTime limit: 1")
    # case9 = [[2, 2],
    #          [2, 2]]
    # for row in case9:
    #     print('', row)
    # print("\n  Expected: []\nCalculated:", str(answer(case9, 1)))
    # print("================================================================")
    # print("\n\nCase 10: Backwards bunny path.\nTime limit: 6")
    # case10 = [[0, 10, 10, 1, 10],
    #           [10, 0, 10, 10, 1],
    #           [10, 1, 0, 10, 10],
    #           [10, 10, 1, 0, 10],
    #           [1, 10, 10, 10, 0]]
    # for row in case10:
    #     print('', row)
    # print("\n  Expected: [0, 1, 2]\nCalculated:", str(answer(case10, 6)))
    # print("================================================================")

    # print(answer([[0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    #               [1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
    #               [1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    #               [1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    #               [1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
    #               [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    #               [1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
    #               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    #               [0, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    #               [0, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],
    #               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    #               [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 0],
    #               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    #               [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1],
    #               [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1],
    #               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    #               [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, 1, 1, 1, 0],
    #               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
    #               [0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0],
    #               [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]))   
    